// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Conway's game of life
component Conway {
	def main(arg: Array<string>) -> int {
		if (arg.length < 1) {
			System.puts("Usage: Conway <steps>\n");
			return 1;
		}

		var steps = Int.parse(arg[0]);
		var input = populate(Matrix.new(100, 100));
		var output = Matrix.new(100, 100);

		for (i < steps) {
			step(input, output);
			var t = input;
			input = output;
			output = t;
			System.putc('.');
		}
		print(input);
		System.ln();
		return 0;
	}
	def populate(input: Matrix) -> Matrix {
		for (i < input.imax) {
			for (j < input.jmax) {
				input.data[i][j] = Random.flip(23, 100);
			}
		}
		return input;
	}
	def step(input: Matrix, output: Matrix) {
		var imax = input.imax, jmax = input.jmax;
		for (i < imax) {
			for (j < jmax) {
				output.data[i][j] = compute(input, i, j);
			}
		}
	}

	def compute(input: Matrix, i: int, j: int) -> bool {
		var num = count(input, i, j);
		if (input.get(i, j) == 1) {
			if (num < 2) return false;
			if (num > 3) return false;
			return true;
		} else if (num == 3) {
			return true;
		}
		return false;
	}
	def count(input: Matrix, i: int, j: int) -> int {
		var g = input.get;
		return g(i-1, j-1) + g(i, j-1) + g(i+1, j-1)
		     + g(i-1, j)               + g(i+1, j)
		     + g(i-1, j+1) + g(i, j+1) + g(i+1, j+1);
	}
	def print(input: Matrix) {
		var imax = input.imax, jmax = input.jmax;
		for (i < imax) {
			System.putc('|');
			for (j < jmax) {
				if (input.get(i, j) == 1) System.putc('o');
				else System.putc(' ');
			}
			System.putc('|');
			System.ln();
		}
	}
}
class Matrix {
	def imax: int;
	def jmax: int;
	def data = Array<Array<bool>>.new(imax);
	new(imax, jmax) {
		for (i < imax) {
			data[i] = Array<bool>.new(jmax);
		}
	}
	def get(i: int, j: int) -> int {
		if (i < 0 || i >= imax) return 0;
		if (j < 0 || j >= imax) return 0;
		var b = data[i][j];
		if (b) return 1;
		return 0;
	}
}
