// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Benchmark program to generate output similar to the "wc" Unix command.
component WordCount {
	var totalLines: int;
	var totalWords: int;
	var totalBytes: int;

	def main(args: Array<Array<byte>>) -> int {
		for (i < args.length) {
			wordCount(args[i]);
		}
		if (args.length > 1) printLine(totalLines, totalWords, totalBytes, "total");
		return 0;
	}
	def wordCount(file: Array<byte>) {
		var buffer = System.fileLoad(file);
		var words = 0, lines = 0;
		if (buffer != null) {
			var inWord = false;
			for (i < buffer.length) {
				match (buffer[i]) {
					' ' => {
						inWord = false;
					}
					'\t' => {
						inWord = false;
					}
					'\n' => {
						inWord = false;
						lines = lines + 1;
					}
				} else {
					if (!inWord) words = words + 1;
					inWord = true;
				}
			}
			printLine(lines, words, buffer.length, file);
			totalLines = totalLines + lines;
			totalWords = totalWords + words;
			totalBytes = totalBytes + buffer.length;
		} else {
			System.puts(file);
			System.puts(": no such file or directory\n");
		}
	}
	def printLine(lines: int, words: int, bytes: int, name: Array<byte>) {
		printInt(lines);
		printInt(words);
		printInt(bytes);
		System.putc(' ');
		System.puts(name);
		System.ln();		
	}
	def printInt(val: int) {
		// print an integer, right-justified, with width 8
		var buffer = "0         ";
		if (val != 0) {
			buffer = Array<byte>.new(11);
			for (i < buffer.length) {
				buffer[i] = if(val == 0, ' ', byte.!((val % 10) + '0'));
				val = val / 10;
			}
		}
		var j = 7;
		while (buffer[j] != ' ') j = j + 1;
		while (j >= 0) {
			System.putc(buffer[j]);
			j = j - 1;
		}
	}
}
