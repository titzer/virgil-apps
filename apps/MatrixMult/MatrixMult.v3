// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component MatrixMult {
	def SIZE = 30;

	def main(args: Array<Array<byte>>) -> int {
		var m1 = mkmatrix(SIZE, SIZE);
		var m2 = mkmatrix(SIZE, SIZE);

		var max = Util.intArg(args, 30);
		while (max > 0) {
			multiply(m1, m2, m2);
			max--;
		}
		print(m2);
		return 0;
	}
	def mkmatrix(rows: int, cols: int) -> Array<Array<int>> {
		var count = 1;
		var matrix = Array<Array<int>>.new(rows);
		for (i < rows) {
			matrix[i] = Array<int>.new(cols);
			for (j < cols) {
				matrix[i][j] = count++;
			}
		}
		return matrix;
	}
	def multiply(m1: Array<Array<int>>, m2: Array<Array<int>>, m3: Array<Array<int>>) {
		var rows = m1.length, cols = m1[0].length;
		for (i < rows) {
			for (j < cols) {
				var val = 0;
				for (k < cols) {
					val = val + m1[i][k] * m2[k][j];
				}
				m3[i][j] = val;
			}
		}
	}
	def print(m1: Array<Array<int>>) {
		for (r in m1) {
			for (e in r) {
				System.puti(e);
				System.putc(' ');
			}
			System.ln();
		}
	}
}
