// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

component EditDistance {
	def main(arg: Array<string>) -> int {
		if (arg.length < 2) {
			System.puts("Usage: EditDistance <file1> <file2>\n");
			return 1;
		}
		var f1 = System.fileLoad(arg[0]);
		var f2 = System.fileLoad(arg[1]);

		if (f1 == null) f1 = "";
		if (f2 == null) f2 = "";
		
		System.puti(dist(f1, f2));
		System.ln();
		return 0;
	}
	def dist(s: string, t: string) -> int {
		def n = s.length, m = t.length;

		if (n == 0) return m;
		if (m == 0) return n;

		def d = matrix(n + 1, m + 1);

		for (i < n) {
			for (j < m) {
				def cost = if(s[i] != t[j], 1);
				d[i + 1][j + 1] = min(d[i][j + 1] + 1, d[i + 1][j] + 1, d[i][j] + cost);
			}
		}

		return d[n][m];
	}
	def min(a: int, b: int, c: int) -> int {
		var m = a;
		if (b < m) m = b;
		if (c < m) m = c;
		return m;
	}
	def matrix(n: int, m: int) -> Array<Array<int>> {
		var d = Array<Array<int>>.new(n);
		// allocate the matrix
		for (i < n) d[i] = Array<int>.new(m);
		// initialize edit distances
		for (i < n) d[i][0] = i;
		// initialize edit distances
		for (i < m) d[0][i] = i;
		return d;
	}
}
