// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Emulates the hexdump -C command.
component HexDump {
	def hexchars = "0123456789abcdef";
	def buf = initBuf();
	var errors = 0;

	def main(args: Array<string>) -> int {
		for (i < args.length) hexDump(args[i]);
		return errors;
	}
	def initBuf() -> Array<byte> {
		var buf = Array<byte>.new(79);
		for (i < buf.length) {
			buf[i] = ' ';
		}
		buf[60] = '|';
		buf[77] = '|';
		buf[buf.length - 1] = '\n';
		return buf;
	}
	def hexDump(fileName: string) {
		System.puts(fileName);
		System.puts(": ");
		var data = System.fileLoad(fileName);
		if (data == null) {
			System.puts("not found\n");
			errors++;
			return;
		}
		System.puti(data.length);
		System.ln();

		// fill out all full-length rows
		var max = data.length & 0xFFFFFFF0;
		for (i = 0; i < max; i = i + 16) {
			fillFull(data, i);
			System.puts(buf);
		}
		// fill the overflow row
		var left = data.length & 0xF;
		if (left > 0) {
			fillLeft(data, max, left);
			System.puts(buf);
		}
	}
	def fillFull(data: Array<byte>, i: int) {
		var a = i;
		for (j = 7; j >= 0; j--) {
			// fill in the offset
			buf[j] = hexchars[a & 0xF];
			a = a >>> 4;
		}
		for (j < 8) {
			// fill out data
			var d = data[i+j];
			buf[10+j*3] = hexchars[d >>> 4];
			buf[11+j*3] = hexchars[d & 0xF];
			buf[61+j] = if (d < 32 || d > 127, '.', d);
		}
		for (j = 8; j < 16; j++) {
			// fill out data
			var d = data[i+j];
			buf[11+j*3] = hexchars[d >>> 4];
			buf[12+j*3] = hexchars[d & 0xF];
			buf[61+j] = if (d < 32 || d > 127, '.', d);
		}
	}
	def fillLeft(data: Array<byte>, i: int, left: int) {
		var a = i;
		for (j = 7; j >= 0; j--) {
			// fill in the offset
			buf[j] = hexchars[a & 0xF];
			a = a >>> 4;
		}
		for (j < left) {
			// fill out data
			var d = data[i+j], base = if(j >= 8, 11, 10);
			buf[base+j*3] = hexchars[d >>> 4];
			buf[base+1+j*3] = hexchars[d & 0xF];
			buf[61+j] = if (d < 32 || d > 127, '.', d);
		}
		for (j = 10+left*3; j < 60; j++) {
			// fill in spaces
			buf[j] = ' ';
		}
		for (j = 61+left; j < 78; j++) {
			// fill in spaces
			buf[j] = ' ';
		}
		buf[61+left] = '|';
	}
}
