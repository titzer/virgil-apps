// Copyright 2011 Google Inc. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// A program to test the performance of the functional implementation of lists
class List<T> {
	def head: T;
	def tail: List<T>;
	new(head, tail) { }
}

component Lists {
	def apply<T>(list: List<T>, func: T -> void) {
		while (list != null) {
			func(list.head);
			list = list.tail;
		}
	}
	def applyRev<T>(list: List<T>, func: T -> void) {
		if (list.tail != null) applyRev(list.tail, func);
		func(list.head);
	}
}

component ListApply {
	def LENGTH = 100;
	var cumul  = 0;
	def main(args: Array<Array<byte>>) -> int {
		var max = Util.intArg(args, 1000);
		var list: List<int> = null;

		for (i < LENGTH) {
			list = List<int>.new(i, list);
		}
		for (j < max) {
			Lists.apply(list, nothing);
			Lists.apply(list, sum);
			Lists.applyRev(list, nothing);
			Lists.applyRev(list, sum);
			print(j);
		}
		Lists.apply(list, print);
		Lists.applyRev(list, print);
		System.ln();
		return 0;
	}
	def nothing(val: int) {
		// do nothing.
	}
	def print(val: int) {
		System.puti(val);
		System.putc(' ');
	}
	def sum(val: int) {
		cumul = cumul + val;
	}
}
