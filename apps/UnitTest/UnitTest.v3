// Copyright 2023 Virgil authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Register tests.
def T = UnitTests.register;
def X = [
	T("single", test_single),
	T("ok", test_ok),
	T("fail0", test_fail0),
	T("fail1", test_fail1),
	T("fail2", test_fail2),
	UnitTests.registerRenderer(FooBar.render),
	()
];

// Tests
//========================================================================
def test_single(t: Tester) {
}

def test_ok(t: Tester) {
	t.asserti(11, 11);
	t.assertz(true, true);
	t.assert(6 == 6, "sanity test");
}

def test_fail0(t: Tester) {
	t.fail("fail on purpose");
}

def test_fail1(t: Tester) {
	t.asserti(7, 8);
}

def test_fail2(t: Tester) {
	t.assert_eq(FooBar.new(7, 8), FooBar.new(8, 9));
}

class FooBar(x: int, y: int) {
	def render(buf: StringBuilder) -> StringBuilder {
		return buf.put2("FooBar(%d, %d)", x, y);
	}
}

// Main
//========================================================================
def main(args: Array<string>) -> int {
	return UnitTests.run(args);
}
